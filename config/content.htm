<h1>About</h1>
<p>pj3第四組</p>
<p></p>
<p>網頁:<a href="https://mdecd2023.github.io/2a3-pj3ag4/content/index.html">https://mdecd2023.github.io/2a3-pj3ag4/content/index.html</a> </p>
<p>倉儲:<a href="https://github.com/mdecd2023/2a3-pj3ag4">https://github.com/mdecd2023/2a3-pj3ag4</a> </p>
<p></p>
<p><span>41023104</span></p>
<p><span><a href="http://[2001:288:6004:17:2023:cda:4:1]:23020/">http://[2001:288:6004:17:2023:cda:4:1]:23020/</a> <br/></span></p>
<p><span>41023112 </span></p>
<p><span><a href="http://[2001:288:6004:17:2023:cda:4:2]:23020/">http://[2001:288:6004:17:2023:cda:4:2]:23020/</a> <br/></span></p>
<p><span>41023121</span></p>
<p><span><a href="http://[2001:288:6004:17:2023:cda:4:3]:23020/">http://[2001:288:6004:17:2023:cda:4:3]:23020/</a> <br/></span></p>
<p><span>41023134</span></p>
<p><span><a href="http://[2001:288:6004:17:2023:cda:4:4]:23020/">http://[2001:288:6004:17:2023:cda:4:4]:23020/</a> <br/></span></p>
<p><span>41023143</span></p>
<p><span><a href="http://[2001:288:6004:17:2023:cda:4:5]:23020/">http://[2001:288:6004:17:2023:cda:4:5]:23020/</a> <br/></span></p>
<p>41023146</p>
<p><a href="http://[2001:288:6004:17:2023:cda:4:6]:23020/">http://[2001:288:6004:17:2023:cda:4:6]:23020/</a></p>
<p>41023147</p>
<p><a href="http://[2001:288:6004:17:2023:cda:4:7]:23020/">http://[2001:288:6004:17:2023:cda:4:7]:23020/</a></p>
<p>41023148</p>
<p><a href="http://[2001:288:6004:17:2023:cda:4:8]:23020/">http://[2001:288:6004:17:2023:cda:4:8]:23020/</a></p><h1>jitsi</h1>
<h2>協同過程</h2>
<p>一<strong>.0515協同過程</strong></p>
<p><strong>    </strong>1.分配PJ3的任務:</p>
<p>        41023146:負責目標2,3,4<span>,</span>7</p>
<p>        41023147,41023143:負責目標4,5</p>
<p>        41023112,41023104:負責目標6</p>
<p>        41023148:負責目標1,6</p>
<p>        41023121,41023134:負責簡報</p>
<p><strong></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/f3FYJpjT1Bg" title="YouTube video player" width="560"></iframe></p>
<p>==</p><h1>pj3</h1>
<p><span style="background-color: #ffff00;"><strong>pj3目標:</strong></span></p>
<p><strong>1.場景中的計時器(.ttm)(✅)</strong></p>
<p><strong>2.添加球員擊球技能、球員倒地再站起</strong></p>
<p><strong>3.球進球框不刪除改收集(圖檔已完成、只缺更改名稱的函式)(✅)</strong></p>
<p><strong>4.球員移動優化(例如:前進可以加右轉一起)(✅)</strong></p>
<p><strong>5.設計球員新外型(✅)</strong></p>
<p><strong>6.另外以建立以機械轉盤傳動計分系統(.ttm)</strong></p>
<p><strong>7.將記分板系統改為.ttm格式(✅)</strong></p>
<p><strong>---</strong></p>
<p><b>完成進度:</b></p>
<p><strong>1.第七點完成</strong>(<a href="/downloads/pj3ag4_zmq_bubbleRob1.7z">pj3ag4_zmq_bubbleRob1.7z</a>, <a href="/downloads/scoreboard.ttm">scoreboard.ttm</a>)</p>
<p> ◉scoreboard.ttm中不含感測器只要將場景中感測器改名為sensor1、sensor2就可以用了(要跟board同一層)</p>
<p><strong>2.第三點完成</strong>(<a href="/downloads/pj3ag4_zmq_bubbleRob2.7z">pj3ag4_zmq_bubbleRob2.7z</a>)</p>
<p> ◉將sim.removeObject(ball)---刪除球 改為 sim.setObjectAlias(ball, 'ball')---將球改名(球原本名稱為Sphere)</p>
<p><strong>3.第五點完成</strong>(<a href="/downloads/brickRob.ttm">brickRob.ttm</a>)</p>
<p> ◉將原本車體改為磚塊型，除了解決車體本身會倒的問題之外，還將前進原理更改為四軸驅動，使轉彎更為順暢及合理。</p>
<p><img alt="" height="315" src="/images/brickRob.png" width="560"/></p>
<p><strong>4.第四點完成</strong>(<a href="/downloads/brickRob.7z">brickRob.7z</a>) 延伸更新:(<a href="/downloads/brickRob2.7z">brickRob2.7z</a>)</p>
<p><span> ◉將原本上相左右同時只能執行一個,改為前後可跟左右一起執行,操作性有很大的提升</span></p>
<p> <span>◉延伸更新為第二種車體運作方式，其原理為更改整個車體角度使其變換方向</span></p>
<p><span><strong>5.第六點半完成</strong>(<a href="/downloads/機械計分板.rar">機械計分板.rar</a>&amp;<a href="/downloads/機械記分板.ttt">機械記分板.ttt</a>)</span></p>
<p><span> ◉CoppeliaSim4.3.0和CoppeliaSim4.5的版本不相容<a href="/downloads/嘗試啟動記分板.ttt">嘗試啟動記分板.ttt</a>是使用4.3.3版本開啟的齒輪之間會有所卡頓還需改正齒輪外型</span></p>
<p><span> ◉</span>將圖檔重畫後再重新導進<span>CoppeliaSim中,將齒輪的質量和慣性矩調整後即可順利運行</span></p>
<p><span><strong>6.修改尺寸並將磚塊型車體導入場景</strong>(<a href="/downloads/zmq_brickRob1.7z">zmq_brickRob1.7z</a>)</span></p>
<p><span> ◉修改足球大小</span></p>
<p><span> ◉更改感測器位置</span></p>
<p><strong>7.完成計時器及調整計分板顏色</strong>(<a href="/downloads/timer.ttm">timer.ttm</a>,<a href="/downloads/scoreboard2.ttm">scoreboard2.ttm</a>)</p>
<p><span> ◉利用sim.getSimulationTime()函數獲得模擬時間並配合記分板程式,完成實體計時器製作</span></p>
<p> ◉將計分板改為黑底白字(將程式修改為停止模擬時分數歸零)</p>
<p><strong>8.更改球員外型</strong>(<a href="/downloads/player.7z">player.7z</a>)</p>
<p><span> ◉添加球員手部</span></p>
<p><span> ◉球員本體用導入的開啟碰撞會抖動，所以我加入skin物件(球員外型)然後將本體隱藏</span></p>
<p><span><strong>9.新機械計分板零件包</strong>(<a href="/downloads/48scoreboard.zip">48scoreboard.zip</a>)</span></p>
<p><span> ◉導入場景(<a href="/downloads/scoreboard3.ttt">scoreboard3.ttt</a><span> </span><a href="/downloads/scoreboard3.ttm">scoreboard3.ttm</a><span>)</span></span></p>
<p><strong>10.整合所有物件</strong>(<a href="/downloads/zmq_football.7z">zmq_football.7z</a>)(未完成)</p>
<p> <span>◉將計時器、球員、場地、記分板、機械記分板導入</span></p>
<p> <span>◉添加八個球員的控制程式</span></p>
<p><strong>11.添加背號及空氣牆及zmq_IPv6</strong>(<a href="/downloads/zmq_football2.7z">zmq_football2.7z</a>)</p>
<p></p>
<p><strong>12.機械式記分板lua</strong><strong>程式</strong>(<a href="/downloads/m_scoreboard.ttm">m_scoreboard.ttm</a>,<a href="/downloads/zmq_football3.7z">zmq_football3.7z</a>)</p>
<p><span> </span><span>◉添加機械式計分版程式利用sim.getJointTargetPosition()</span></p>
<p><span></span>獲取計分版角度再用<span>sim.setJointTargetPosition()更改角度</span></p>
<p><span><strong>13.在解決問題二的過程中因為轉矩調過大導致出現了能夠托馬斯迴旋的功能</strong>(<a href="/downloads/player problem1.ttt">player problem1.ttt</a>,<a href="/downloads/player problem1.ttm">player problem1.ttm</a>)</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/BEJIMr3QHeI" title="YouTube video player" width="560"></iframe></p>
<p><span> </span></p>
<p><span><strong>14.更改外型</strong>(<a href="/downloads/player2.ttt">player2.ttt</a>,<a href="/downloads/player.ttm">player.ttm</a>)</span></p>
<p><span> <span>◉</span>解決翻車問題，增加本體的質量<br/></span></p>
<p></p>
<p><span> </span></p>
<p><span></span></p>
<p></p>
<p></p>
<p><strong></strong></p>
<p></p>
<p></p>
<p></p><h2>Detail</h2>
<h3>Repository</h3>
<p>修改 init.py 將網站標題改為 2a3-pj3ag4</p>
<p>建立 server_admin.py 使用 8140 port 但只用於 cad2 主機, 請勿在 stud2 主機中啟用</p>
<p>參與協同設計專案的所有成員應該都必須充分了解為何要使用 Git 與網際內容管理系統</p>
<p style="padding-left: 30px;">假如針對開會討論以外的事項, 各組員希望導入測試用的內容, 無論是 LaTeX, 開發程式, 簡報或網站內容, 都可以開 branch 進行測試, 若在隨後的會議取得共識, 再將測試的內容合併至 main branch</p><h3>CAD</h3>
<p>在場景中所使用的所有零組件, 都應該要交代構想, 設計與繪圖流程, 並說明所使用的套件, 最後再提供各種格式的檔案下載, 若單一檔案超過 20MB, 則建議放入可以公開的 GDrive 或 OneDrive, 並提供下載連結.</p><h3>Lua</h3>
<p>CoppeliaSim 的本體是採用 C++ 與 Qt 編寫, 並利用 Lua 來進行彈性設定與功能延伸, 將 Lua 寫在 .ttt 或 .ttm 中的好處是容易打包, 但在改版過程則沒有文字檔格式的改版資料, 因此較好的開發模式為:</p>
<p>在開發過程可以利用導入的方式將 Lua 程式放在 .ttt 之外, 等到最後要打包 .ttm 或 .ttt 時再將最後結果置入.</p><h3>Python</h3>
<p>Legacy Python remote API 因為其效能無法與 zmqRemoteAPI 比較, 因此隨後的 remoteAPI 都將採用 zmq 的方式進行控制, 利用 Python 進行控制過程, 必須要能呈現不同改版的差異, 並在程式中詳加說明.</p>
<p>一來讓其他參考的分組或組員可以充分了解, 二來也可以在日後自己參考或延伸應用時, 以最短時間進入狀況.</p><h3>Models</h3>
<p>在場景中所建立的各種 .ttm, 除了要詳細說明如何從 CAD 建立模型, 轉入 CoppeliaSim, 然後進行簡化與相關設定外, 還要提供檔案下載, 說明建立此模型的成員學號等資料, 最後再利用 .git 動畫檔案說明模型特定等.</p>
<p>因為目前最新的 cmsimde 為了讓手機拍攝的影像檔案能夠在上傳之前進行 resize, 因此破壞原有 .gif 檔案的動態特性.</p>
<p>這個問題尚未解決之前, 若要導入 .gif, 必須設法直接將檔案送到 images 目錄後再行引用. 例如: 可以直接在 Github 倉儲直接將 .gif 檔案 upload 到 images 目錄後, 然後在近端或中端伺服器中, 以 git pull 拉下後引用.</p>
<p><img alt="" height="268" src="/images/mechanical_counter_demo.gif" width="400"/></p><h3>Scenes</h3>
<p>有關各版次所完成的場景與控制程式, 必須詳細說明各版本的差異 (即 release statement), 也可在團隊間學習如何使用 cmsimde 的 peliacan blog 與 reveal presentation, 而最後則必須學習如何在各組員同步編輯 LaTeX 內容的流程中, 完成 pj3 專案報告 pdf 檔案.</p><h2>STL</h2>
<p></p>
<p>1.球員皮膚圖檔(<a href="/downloads/STL/skin.7z">skin.7z</a>)</p>
<p><img alt="" height="193" src="/images/skin.jpg" width="343"/></p>